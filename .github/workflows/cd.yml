name: "CD"

on:
  workflow_dispatch:
    inputs:
      release-type:
        description: "Type of release?"
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  release:
    name: "Release"
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_PAT }}

      - name: "Set up Node"
        uses: actions/setup-node@v2
        with:
          node-version: '12'
          cache: 'yarn'

      - name: "Install dependencies"
        run: yarn install --frozen-lockfile

      - name: "Bump package versions"
        id: bump
        run: |
          yarn bump ${{ github.event.inputs.release-type }}
          echo "::set-output name=version::$(node --print 'require("./lerna.json").version')"

      - name: "Update the changelog"
        # Find the first line that starts with `###` or `## [<number>` from the CHANGELOG and insert the new version header before it.
        run: sed -i "0,/^\(###\|## *\[[0-9]\).*/{s//## [${{ steps.bump.outputs.version }}] - $(date -u '+%Y-%m-%d')\n\n&/}" CHANGELOG.md

      - name: "Extract version's changelog for release notes"
        # 1. Find the lines between the first `## [<number>` and the second `## [<number>`.
        # 2. Remove all leading and trailing newlines from the output.
        run: sed '1,/^## *\[[0-9]/d;/^## *\[[0-9]/Q' CHANGELOG.md | sed -e :a -e '/./,$!d;/^\n*$/{$d;N;};/\n$/ba' > release_notes.txt

      - name: "Commit and tag the changes"
        run: |
          git config user.name 'github-actions'
          git config user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git add lerna.json \*package.json CHANGELOG.md
          git commit --message='Release ${{ steps.bump.outputs.version }}'
          git tag --annotate --message='' v${{ steps.bump.outputs.version }}

      - name: "Build the sources"
        run: yarn build

      - name: "Publish to npm"
        run: |
          echo '//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}' > .npmrc
          yarn release

      - name: "Push the changes"
        run: git push --follow-tags

      - name: "Create a GitHub release"
        uses: softprops/action-gh-release@1e07f4398721186383de40550babbdf2b84acfc5  # v1
        with:
          tag_name: v${{ steps.bump.outputs.version }}
          name: v${{ steps.bump.outputs.version }}
          body_path: release_notes.txt
